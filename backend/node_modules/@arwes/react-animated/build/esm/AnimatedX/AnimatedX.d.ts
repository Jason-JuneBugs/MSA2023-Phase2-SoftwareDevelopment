import { type HTMLProps, type SVGProps, type CSSProperties, type ReactElement, type ForwardedRef, type ReactNode } from 'react';
import { type NoInfer } from '@arwes/tools';
import type { AnimatedProp } from '../types';
interface AnimatedXProps<E extends HTMLElement | SVGElement = HTMLDivElement> {
    elementRef?: ForwardedRef<E>;
    className?: string;
    style?: CSSProperties;
    state?: string;
    animated?: AnimatedProp;
    as?: keyof HTMLElementTagNameMap | keyof SVGElementTagNameMap;
    children?: ReactNode;
}
declare const AnimatedX: <E extends HTMLElement | SVGElement = HTMLDivElement, P extends HTMLProps<HTMLElement> | SVGProps<SVGElement> = HTMLProps<HTMLDivElement>>(props: AnimatedXProps<E> & NoInfer<P>) => ReactElement;
export type { AnimatedXProps };
export { AnimatedX };
