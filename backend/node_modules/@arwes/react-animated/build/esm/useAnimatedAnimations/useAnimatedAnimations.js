import { useMemo } from 'react';
import { ANIMATED_ANIMATIONS_EMPTY } from "../constants.js";
const useAnimatedAnimations = (animationsList, props, dependencies) => {
    const [createBaseAnimatedAnimations, createUserAnimatedAnimations] = animationsList;
    const createUserAnimatedAnimationsType = typeof createUserAnimatedAnimations === 'boolean'
        ? 'boolean'
        : typeof (createUserAnimatedAnimations || undefined);
    return useMemo(() => {
        if (createUserAnimatedAnimations === false) {
            return ANIMATED_ANIMATIONS_EMPTY;
        }
        if (createUserAnimatedAnimations) {
            const userAnimatedAnimations = typeof createUserAnimatedAnimations === 'function'
                ? createUserAnimatedAnimations(props)
                : createUserAnimatedAnimations;
            return {
                ...createBaseAnimatedAnimations(props),
                ...userAnimatedAnimations
            };
        }
        return createBaseAnimatedAnimations(props);
    }, [createUserAnimatedAnimationsType, ...dependencies]);
};
export { useAnimatedAnimations };
