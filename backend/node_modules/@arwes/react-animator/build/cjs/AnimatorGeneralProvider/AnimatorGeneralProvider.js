"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AnimatorGeneralProvider = void 0;
const react_1 = require("react");
const index_1 = require("../internal/AnimatorGeneralContext/index");
const AnimatorGeneralProvider = (props) => {
    const { children, ...animatorGeneralSettings } = props;
    const animatorGeneralSettingsRef = (0, react_1.useRef)(animatorGeneralSettings);
    animatorGeneralSettingsRef.current = animatorGeneralSettings;
    const animatorGeneralInterface = (0, react_1.useMemo)(() => {
        // TODO: Merge with existing parent general animator settings.
        const getSettings = () => animatorGeneralSettingsRef.current;
        return Object.freeze({ getSettings });
    }, []);
    // TODO: Shouldn't there be a dependencies check for updates?
    return (0, react_1.createElement)(index_1.AnimatorGeneralContext.Provider, { value: animatorGeneralInterface }, children);
};
exports.AnimatorGeneralProvider = AnimatorGeneralProvider;
