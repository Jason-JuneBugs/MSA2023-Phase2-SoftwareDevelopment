import React, { useMemo, useEffect } from 'react';
import { createBleepsManager } from '@arwes/bleeps';
import { BleepsManagerContext } from "../internal/BleepsManagerContext.js";
const BleepsProvider = (props) => {
    const { master, common, categories, bleeps, children } = props;
    // The bleeps is created once with the provided bleep names.
    const bleepsManager = useMemo(() => createBleepsManager({ master, common, categories, bleeps }), []);
    useEffect(() => {
        bleepsManager === null || bleepsManager === void 0 ? void 0 : bleepsManager.update({ master, common, categories, bleeps });
    }, [master, common, categories, bleeps]);
    useEffect(() => {
        return () => {
            bleepsManager === null || bleepsManager === void 0 ? void 0 : bleepsManager.unload();
        };
    }, []);
    return (React.createElement(BleepsManagerContext.Provider, { value: bleepsManager }, children));
};
export { BleepsProvider };
