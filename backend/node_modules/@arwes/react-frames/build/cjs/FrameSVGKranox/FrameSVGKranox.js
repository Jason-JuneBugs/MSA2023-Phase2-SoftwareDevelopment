"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FrameSVGKranox = void 0;
const tslib_1 = require("tslib");
const react_1 = tslib_1.__importStar(require("react"));
const tools_1 = require("@arwes/tools");
const index_1 = require("../FrameSVG/index");
const toPath = (points) => points.map((p, i) => [i === 0 ? 'M' : 'L', ...p]);
const FrameSVGKranox = (props) => {
    const { squareSize: ss = 16, strokeWidth = 1, smallLineLength: sll = 16, largeLineLength: lll = 64, padding: p = 0, className, ...otherProps } = props;
    const paths = (0, react_1.useMemo)(() => {
        const so = strokeWidth / 2; // Stroke offset.
        const polylineStyle = {
            stroke: 'currentcolor',
            strokeLinecap: 'round',
            strokeLinejoin: 'round',
            strokeWidth: String(strokeWidth),
            fill: 'none'
        };
        // Left-bottom > left-top > right-top.
        const leftTopLine = [
            // Left-bottom.
            [so + p + ss * 2, `100% - ${so + p}`],
            [so + p + ss, `100% - ${so + p + ss}`],
            // Left.
            [so + p + ss, so + p + lll + ss * 3 + sll],
            [so + p, so + p + lll + ss * 2 + sll],
            [so + p, so + p + ss * 2 + sll],
            [so + p + ss, so + p + sll + ss],
            // Left-top.
            [so + p + ss, so + p + ss],
            [so + p + ss * 2, so + p],
            // Right-top.
            [`100% - ${so + p + ss * 2}`, so + p]
        ];
        // Right-top > Right-bottom > Left-bottom.
        const rightBottomLine = [
            // Right-top.
            [`100% - ${so + p + ss * 2}`, so + p],
            [`100% - ${so + p + ss}`, so + p + ss],
            // Right.
            [`100% - ${so + p + ss}`, `100% - ${so + p + ss * 3 + sll + lll}`],
            [`100% - ${so + p}`, `100% - ${so + p + ss * 2 + sll + lll}`],
            [`100% - ${so + p}`, `100% - ${so + p + ss * 2 + sll}`],
            [`100% - ${so + p + ss}`, `100% - ${so + p + ss + sll}`],
            // Right-bottom.
            [`100% - ${so + p + ss}`, `100% - ${so + p + ss}`],
            [`100% - ${so + p + ss * 2}`, `100% - ${so + p}`],
            // Left-bottom.
            [so + p + ss * 2, `100% - ${so + p}`]
        ];
        const paths = [
            {
                name: 'bg',
                style: {
                    strokeWidth: 0,
                    fill: 'currentcolor'
                },
                path: toPath(leftTopLine.concat(rightBottomLine))
            },
            {
                name: 'line',
                style: polylineStyle,
                path: toPath(leftTopLine)
            },
            {
                name: 'line',
                style: polylineStyle,
                path: toPath(rightBottomLine)
            }
        ];
        return paths;
    }, [sll, lll, ss, strokeWidth, p]);
    return (react_1.default.createElement(index_1.FrameSVG, { ...otherProps, className: (0, tools_1.cx)('arwes-react-frames-framesvgkranox', className), paths: paths }));
};
exports.FrameSVGKranox = FrameSVGKranox;
