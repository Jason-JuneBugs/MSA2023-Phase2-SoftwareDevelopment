import React, { useRef, useEffect } from 'react';
import { cx } from '@arwes/tools';
const Illuminator = (props) => {
    const { color = 'hsl(0 0% 50% / 5%)', size = 300, className, style } = props;
    const elementRef = useRef(null);
    useEffect(() => {
        const element = elementRef.current;
        const parentElement = element.parentElement;
        const onMove = (event) => {
            const bounds = parentElement.getBoundingClientRect();
            const x = event.clientX - bounds.left;
            const y = event.clientY - bounds.top;
            element.style.opacity = '1';
            element.style.transform = `translate(calc(${x}px - 50%), calc(${y}px - 50%))`;
        };
        const onHide = () => {
            element.style.opacity = '0';
        };
        document.addEventListener('mousemove', onMove);
        document.addEventListener('mouseleave', onHide);
        return () => {
            document.removeEventListener('mousemove', onMove);
            document.removeEventListener('mouseleave', onHide);
        };
    }, []);
    return (React.createElement("div", { role: 'presentation', className: cx('arwes-react-frames-illuminator', className), style: {
            position: 'absolute',
            width: size,
            height: size,
            transition: 'opacity 200ms ease-out',
            opacity: 0,
            pointerEvents: 'none',
            borderRadius: '50%',
            background: `radial-gradient(${color} 0%, transparent 70%)`,
            ...style
        }, ref: elementRef }));
};
export { Illuminator };
