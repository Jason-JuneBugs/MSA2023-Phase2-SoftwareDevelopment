declare module '@arwes/react-frames/FrameSVG/FrameSVG' {
  import { type SVGProps, type ForwardedRef, type ReactElement, type ReactNode, type CSSProperties } from 'react';
  import { type FrameSVGPathGeneric } from '@arwes/frames';
  interface FrameSVGProps extends SVGProps<SVGSVGElement> {
      paths?: FrameSVGPathGeneric[];
      onRender?: (svg: SVGSVGElement, width: number, height: number) => void;
      className?: string;
      style?: CSSProperties;
      elementRef?: ForwardedRef<SVGSVGElement>;
      children?: ReactNode;
  }
  const FrameSVG: (props: FrameSVGProps) => ReactElement;
  export type { FrameSVGProps };
  export { FrameSVG };

}
declare module '@arwes/react-frames/FrameSVG/index' {
  /// <reference types="react" />
  const FrameSVG: (props: import("@arwes/react-frames/FrameSVG/FrameSVG").FrameSVGProps) => import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>>;
  export * from '@arwes/react-frames/FrameSVG/FrameSVG';
  export { FrameSVG };

}
declare module '@arwes/react-frames/FrameSVGCorners/FrameSVGCorners' {
  import { type ReactElement } from 'react';
  import { type FrameSVGProps } from '@arwes/react-frames/FrameSVG/index';
  interface FrameSVGCornersProps extends FrameSVGProps {
      strokeWidth?: number;
      cornerLength?: number;
      className?: string;
  }
  const FrameSVGCorners: (props: FrameSVGCornersProps) => ReactElement;
  export type { FrameSVGCornersProps };
  export { FrameSVGCorners };

}
declare module '@arwes/react-frames/FrameSVGCorners/index' {
  /// <reference types="react" />
  const FrameSVGCorners: (props: import("@arwes/react-frames/FrameSVGCorners/FrameSVGCorners").FrameSVGCornersProps) => import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>>;
  export * from '@arwes/react-frames/FrameSVGCorners/FrameSVGCorners';
  export { FrameSVGCorners };

}
declare module '@arwes/react-frames/FrameSVGKranox/FrameSVGKranox' {
  import { type ReactElement } from 'react';
  import { type FrameSVGProps } from '@arwes/react-frames/FrameSVG/index';
  interface FrameSVGKranoxProps extends FrameSVGProps {
      squareSize?: number;
      padding?: number;
      strokeWidth?: number;
      smallLineLength?: number;
      largeLineLength?: number;
      className?: string;
  }
  const FrameSVGKranox: (props: FrameSVGKranoxProps) => ReactElement;
  export type { FrameSVGKranoxProps };
  export { FrameSVGKranox };

}
declare module '@arwes/react-frames/FrameSVGKranox/index' {
  /// <reference types="react" />
  const FrameSVGKranox: (props: import("@arwes/react-frames/FrameSVGKranox/FrameSVGKranox").FrameSVGKranoxProps) => import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>>;
  export * from '@arwes/react-frames/FrameSVGKranox/FrameSVGKranox';
  export { FrameSVGKranox };

}
declare module '@arwes/react-frames/FrameSVGLines/FrameSVGLines' {
  import { type ReactElement } from 'react';
  import { type FrameSVGProps } from '@arwes/react-frames/FrameSVG/index';
  interface FrameSVGLinesProps extends FrameSVGProps {
      largeLineWidth?: number;
      smallLineWidth?: number;
      smallLineLength?: number;
      className?: string;
  }
  const FrameSVGLines: (props: FrameSVGLinesProps) => ReactElement;
  export type { FrameSVGLinesProps };
  export { FrameSVGLines };

}
declare module '@arwes/react-frames/FrameSVGLines/index' {
  /// <reference types="react" />
  const FrameSVGLines: (props: import("@arwes/react-frames/FrameSVGLines/FrameSVGLines").FrameSVGLinesProps) => import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>>;
  export * from '@arwes/react-frames/FrameSVGLines/FrameSVGLines';
  export { FrameSVGLines };

}
declare module '@arwes/react-frames/FrameSVGNefrex/FrameSVGNefrex' {
  import { type ReactElement } from 'react';
  import { type FrameSVGProps } from '@arwes/react-frames/FrameSVG/index';
  interface FrameSVGNefrexProps extends FrameSVGProps {
      squareSize?: number;
      padding?: number;
      strokeWidth?: number;
      smallLineLength?: number;
      largeLineLength?: number;
      className?: string;
  }
  const FrameSVGNefrex: (props: FrameSVGNefrexProps) => ReactElement;
  export type { FrameSVGNefrexProps };
  export { FrameSVGNefrex };

}
declare module '@arwes/react-frames/FrameSVGNefrex/index' {
  /// <reference types="react" />
  const FrameSVGNefrex: (props: import("@arwes/react-frames/FrameSVGNefrex/FrameSVGNefrex").FrameSVGNefrexProps) => import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>>;
  export * from '@arwes/react-frames/FrameSVGNefrex/FrameSVGNefrex';
  export { FrameSVGNefrex };

}
declare module '@arwes/react-frames/FrameSVGOctagon/FrameSVGOctagon' {
  import { type ReactElement } from 'react';
  import { type FrameSVGProps } from '@arwes/react-frames/FrameSVG/index';
  interface FrameSVGOctagonProps extends FrameSVGProps {
      leftTop?: boolean;
      rightTop?: boolean;
      rightBottom?: boolean;
      leftBottom?: boolean;
      squareSize?: number;
      padding?: number;
      strokeWidth?: number;
      className?: string;
  }
  const FrameSVGOctagon: (props: FrameSVGOctagonProps) => ReactElement;
  export type { FrameSVGOctagonProps };
  export { FrameSVGOctagon };

}
declare module '@arwes/react-frames/FrameSVGOctagon/index' {
  /// <reference types="react" />
  const FrameSVGOctagon: (props: import("@arwes/react-frames/FrameSVGOctagon/FrameSVGOctagon").FrameSVGOctagonProps) => import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>>;
  export * from '@arwes/react-frames/FrameSVGOctagon/FrameSVGOctagon';
  export { FrameSVGOctagon };

}
declare module '@arwes/react-frames/FrameSVGUnderline/FrameSVGUnderline' {
  import { type ReactElement } from 'react';
  import { type FrameSVGProps } from '@arwes/react-frames/FrameSVG/index';
  interface FrameSVGUnderlineProps extends FrameSVGProps {
      squareSize?: number;
      strokeWidth?: number;
      inverted?: boolean;
      className?: string;
  }
  const FrameSVGUnderline: (props: FrameSVGUnderlineProps) => ReactElement;
  export type { FrameSVGUnderlineProps };
  export { FrameSVGUnderline };

}
declare module '@arwes/react-frames/FrameSVGUnderline/index' {
  /// <reference types="react" />
  const FrameSVGUnderline: (props: import("@arwes/react-frames/FrameSVGUnderline/FrameSVGUnderline").FrameSVGUnderlineProps) => import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>>;
  export * from '@arwes/react-frames/FrameSVGUnderline/FrameSVGUnderline';
  export { FrameSVGUnderline };

}
declare module '@arwes/react-frames/Illuminator/Illuminator' {
  import { type ReactElement, type CSSProperties, type ForwardedRef } from 'react';
  interface IlluminatorProps {
      color?: string;
      size?: number;
      className?: string;
      style?: CSSProperties;
      elementRef?: ForwardedRef<SVGGElement>;
  }
  const Illuminator: (props: IlluminatorProps) => ReactElement;
  export type { IlluminatorProps };
  export { Illuminator };

}
declare module '@arwes/react-frames/Illuminator/index' {
  /// <reference types="react" />
  const Illuminator: (props: import("@arwes/react-frames/Illuminator/Illuminator").IlluminatorProps) => import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>>;
  export * from '@arwes/react-frames/Illuminator/Illuminator';
  export { Illuminator };

}
declare module '@arwes/react-frames/IlluminatorSVG/IlluminatorSVG' {
  import { type ReactElement, type CSSProperties, type ForwardedRef } from 'react';
  interface IlluminatorSVGProps {
      color?: string;
      size?: number;
      className?: string;
      style?: CSSProperties;
      elementRef?: ForwardedRef<SVGGElement>;
  }
  const IlluminatorSVG: (props: IlluminatorSVGProps) => ReactElement;
  export type { IlluminatorSVGProps };
  export { IlluminatorSVG };

}
declare module '@arwes/react-frames/IlluminatorSVG/index' {
  /// <reference types="react" />
  const IlluminatorSVG: (props: import("@arwes/react-frames/IlluminatorSVG/IlluminatorSVG").IlluminatorSVGProps) => import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>>;
  export * from '@arwes/react-frames/IlluminatorSVG/IlluminatorSVG';
  export { IlluminatorSVG };

}
declare module '@arwes/react-frames/index' {
  export * from '@arwes/react-frames/useFrameSVGRenderer/index';
  export * from '@arwes/react-frames/useFrameSVGAssemblingAnimation/index';
  export * from '@arwes/react-frames/FrameSVG/index';
  export * from '@arwes/react-frames/FrameSVGOctagon/index';
  export * from '@arwes/react-frames/FrameSVGUnderline/index';
  export * from '@arwes/react-frames/FrameSVGCorners/index';
  export * from '@arwes/react-frames/FrameSVGLines/index';
  export * from '@arwes/react-frames/FrameSVGNefrex/index';
  export * from '@arwes/react-frames/FrameSVGKranox/index';
  export * from '@arwes/react-frames/IlluminatorSVG/index';
  export * from '@arwes/react-frames/Illuminator/index';

}
declare module '@arwes/react-frames/useFrameSVGAssemblingAnimation/index' {
  export * from '@arwes/react-frames/useFrameSVGAssemblingAnimation/useFrameSVGAssemblingAnimation';

}
declare module '@arwes/react-frames/useFrameSVGAssemblingAnimation/useFrameSVGAssemblingAnimation' {
  import { type RefObject } from 'react';
  interface FrameSVGAssemblingAnimation {
      onRender: () => void;
  }
  const useFrameSVGAssemblingAnimation: (svgRef: RefObject<SVGSVGElement>) => FrameSVGAssemblingAnimation;
  export type { FrameSVGAssemblingAnimation };
  export { useFrameSVGAssemblingAnimation };

}
declare module '@arwes/react-frames/useFrameSVGRenderer/index' {
  export * from '@arwes/react-frames/useFrameSVGRenderer/useFrameSVGRenderer';

}
declare module '@arwes/react-frames/useFrameSVGRenderer/useFrameSVGRenderer' {
  import { type RefObject } from 'react';
  const useFrameSVGRenderer: (svgRef: RefObject<SVGSVGElement>, onRenderExternal: (svg: SVGSVGElement, width: number, height: number) => void) => void;
  export { useFrameSVGRenderer };

}

declare module '@arwes/react-frames' {
  import main = require('@arwes/react-frames/index');
  export = main;
}
